{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\FitnessTracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, onSnapshot, setDoc } from 'firebase/firestore';\n\n// Main App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Use a state variable to track the initial authentication check.\n  const [isAuthReady, setIsAuthReady] = useState(false);\n\n  // Initialize Firebase and set up auth listener\n  useEffect(() => {\n    // These variables are provided by the canvas environment.\n    const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};\n    const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n    const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n    try {\n      const app = initializeApp(firebaseConfig);\n      const firestoreDb = getFirestore(app);\n      const firestoreAuth = getAuth(app);\n      setDb(firestoreDb);\n      setAuth(firestoreAuth);\n\n      // Listen for auth state changes. This is the correct way to handle\n      // the initial sign-in and subsequent state changes.\n      const unsubscribe = onAuthStateChanged(firestoreAuth, async user => {\n        if (user) {\n          // User is signed in.\n          setUserId(user.uid);\n          setIsAuthReady(true);\n        } else {\n          // User is signed out.\n          if (initialAuthToken) {\n            // If we have a token, attempt to sign in with it.\n            await signInWithCustomToken(firestoreAuth, initialAuthToken);\n          } else {\n            // No token, sign in anonymously.\n            await signInAnonymously(firestoreAuth);\n          }\n        }\n        setLoading(false);\n      });\n\n      // Cleanup listener on unmount\n      return () => unsubscribe();\n    } catch (error) {\n      console.error(\"Error initializing Firebase or signing in:\", error);\n      setLoading(false);\n    }\n  }, []); // Empty dependency array ensures this runs once on mount.\n\n  // Fetch data from Firestore once authenticated\n  useEffect(() => {\n    if (!isAuthReady || !db || !auth) {\n      // Don't try to fetch data until authentication is ready and Firestore is initialized.\n      return;\n    }\n\n    // This is the correct path for private user data\n    const userDocRef = doc(db, 'artifacts', 'default-app-id', 'users', userId, 'user-data', 'profile');\n\n    // Use onSnapshot to get real-time updates to the document\n    const unsubscribe = onSnapshot(userDocRef, doc => {\n      if (doc.exists()) {\n        setData(doc.data());\n      } else {\n        // Document doesn't exist, create a default one.\n        setDoc(userDocRef, {\n          message: \"Hello, world!\"\n        });\n        setData({\n          message: \"Hello, world!\"\n        });\n      }\n    }, error => {\n      console.error(\"Error getting document:\", error);\n    });\n\n    // Cleanup the listener when the component unmounts or dependencies change\n    return () => unsubscribe();\n  }, [db, auth, userId, isAuthReady]); // Re-run when db, auth, userId, or isAuthReady changes.\n\n  // Function to update data\n  const updateData = async () => {\n    if (!db || !userId) return;\n    try {\n      const userDocRef = doc(db, 'artifacts', 'default-app-id', 'users', userId, 'user-data', 'profile');\n      await setDoc(userDocRef, {\n        message: `Updated at ${new Date().toLocaleTimeString()}`\n      });\n    } catch (error) {\n      console.error(\"Error updating document:\", error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-semibold text-gray-700\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4 font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-lg p-6 bg-white rounded-xl shadow-lg text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-800 mb-4\",\n        children: \"Firebase App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-2\",\n        children: [\"User ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-mono text-sm break-all\",\n          children: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: [\"Data: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: data ? data.message : 'No data yet.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateData,\n        className: \"px-6 py-3 mt-4 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\",\n        children: \"Update Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qUh/fu/WGQw78BQXv3XxKEYHH+0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getFirestore","doc","onSnapshot","setDoc","jsxDEV","_jsxDEV","App","_s","db","setDb","auth","setAuth","userId","setUserId","data","setData","loading","setLoading","isAuthReady","setIsAuthReady","firebaseConfig","__firebase_config","JSON","parse","appId","__app_id","initialAuthToken","__initial_auth_token","app","firestoreDb","firestoreAuth","unsubscribe","user","uid","error","console","userDocRef","exists","message","updateData","Date","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/FitnessTracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\r\nimport { getFirestore, doc, onSnapshot, setDoc } from 'firebase/firestore';\r\n\r\n// Main App component\r\nconst App = () => {\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Use a state variable to track the initial authentication check.\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n\r\n  // Initialize Firebase and set up auth listener\r\n  useEffect(() => {\r\n    // These variables are provided by the canvas environment.\r\n    const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};\r\n    const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\n    const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n    try {\r\n      const app = initializeApp(firebaseConfig);\r\n      const firestoreDb = getFirestore(app);\r\n      const firestoreAuth = getAuth(app);\r\n\r\n      setDb(firestoreDb);\r\n      setAuth(firestoreAuth);\r\n\r\n      // Listen for auth state changes. This is the correct way to handle\r\n      // the initial sign-in and subsequent state changes.\r\n      const unsubscribe = onAuthStateChanged(firestoreAuth, async (user) => {\r\n        if (user) {\r\n          // User is signed in.\r\n          setUserId(user.uid);\r\n          setIsAuthReady(true);\r\n        } else {\r\n          // User is signed out.\r\n          if (initialAuthToken) {\r\n            // If we have a token, attempt to sign in with it.\r\n            await signInWithCustomToken(firestoreAuth, initialAuthToken);\r\n          } else {\r\n            // No token, sign in anonymously.\r\n            await signInAnonymously(firestoreAuth);\r\n          }\r\n        }\r\n        setLoading(false);\r\n      });\r\n\r\n      // Cleanup listener on unmount\r\n      return () => unsubscribe();\r\n    } catch (error) {\r\n      console.error(\"Error initializing Firebase or signing in:\", error);\r\n      setLoading(false);\r\n    }\r\n  }, []); // Empty dependency array ensures this runs once on mount.\r\n\r\n  // Fetch data from Firestore once authenticated\r\n  useEffect(() => {\r\n    if (!isAuthReady || !db || !auth) {\r\n      // Don't try to fetch data until authentication is ready and Firestore is initialized.\r\n      return;\r\n    }\r\n\r\n    // This is the correct path for private user data\r\n    const userDocRef = doc(db, 'artifacts', 'default-app-id', 'users', userId, 'user-data', 'profile');\r\n\r\n    // Use onSnapshot to get real-time updates to the document\r\n    const unsubscribe = onSnapshot(userDocRef, (doc) => {\r\n      if (doc.exists()) {\r\n        setData(doc.data());\r\n      } else {\r\n        // Document doesn't exist, create a default one.\r\n        setDoc(userDocRef, { message: \"Hello, world!\" });\r\n        setData({ message: \"Hello, world!\" });\r\n      }\r\n    }, (error) => {\r\n      console.error(\"Error getting document:\", error);\r\n    });\r\n\r\n    // Cleanup the listener when the component unmounts or dependencies change\r\n    return () => unsubscribe();\r\n  }, [db, auth, userId, isAuthReady]); // Re-run when db, auth, userId, or isAuthReady changes.\r\n\r\n  // Function to update data\r\n  const updateData = async () => {\r\n    if (!db || !userId) return;\r\n    try {\r\n      const userDocRef = doc(db, 'artifacts', 'default-app-id', 'users', userId, 'user-data', 'profile');\r\n      await setDoc(userDocRef, { message: `Updated at ${new Date().toLocaleTimeString()}` });\r\n    } catch (error) {\r\n      console.error(\"Error updating document:\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n        <p className=\"text-xl font-semibold text-gray-700\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4 font-sans\">\r\n      <div className=\"w-full max-w-lg p-6 bg-white rounded-xl shadow-lg text-center\">\r\n        <h1 className=\"text-3xl font-bold text-gray-800 mb-4\">Firebase App</h1>\r\n        <p className=\"text-gray-600 mb-2\">User ID: <span className=\"font-mono text-sm break-all\">{userId}</span></p>\r\n        <p className=\"text-gray-600 mb-4\">\r\n          Data: <span className=\"font-semibold\">{data ? data.message : 'No data yet.'}</span>\r\n        </p>\r\n        <button\r\n          onClick={updateData}\r\n          className=\"px-6 py-3 mt-4 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n        >\r\n          Update Data\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}